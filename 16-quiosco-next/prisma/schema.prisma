generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// En prisma los modelos se crean en este archivo
// https://www.prisma.io/docs/orm/prisma-schema/data-model/models
// Segun la documentación, los campos se definen de la siguiente manera
// Pulsa TAB para dar un salto de espaciado
// El id se genera con un valor autoincrementable, similar a un key
model Category {
  id    Int       @id   @default(autoincrement())
  name  String 
  slug  String
  products Product[]
}

// Los modelos se añaden al sistema de migraciones de Prisma, con el comando npx prisma migrate dev, luego escribele un nombre en la consola como "categories migration" y genera una carpeta para almacenar las migraciones (migrations) y dentro del archivo migration.sql se encuentra un codigo SQL, tambien sincroniza la base de datos con npx prisma studio, abre un cliente web

// Prisma studio no puede ser hospedado en un servidor de producción porque no es una herramienta Open Source ni es gratuita


// Los campos de tipo numero se define con Int o Float
// Image contiene la dirección de la imagen
// Para establecer una relacion entre Product y Category, primero define la llave foranea con categoryId y luego establece la relacion con el modelo, @relation define una relacion, requiere el nombre del campo y la referencia
// Tambien debes hacer una relacion inversa en Category
model Product {
  id          Int       @id     @default(autoincrement())
  name        String 
  price       Float
  image       String
  categoryId  Int
  category    Category  @relation(fields: [categoryId],references: [id])
}

// En la consola, deten prisma studio pulsando CTRL + C y luego ejecuta npx prisma migrate dev para crear otra migración, en este caso lleva el nombre "products_migration"

// Luego ejecuta npx prisma studio para ver los cambios

// Siempre tienes que migrar cada vez que hagas un cambio en la definición de modelos